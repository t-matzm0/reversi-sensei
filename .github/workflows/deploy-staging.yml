name: Deploy to Staging

on:
  push:
    branches: [ develop ]

env:
  NODE_VERSION: '20'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Build for Firebase
      run: npm run build:firebase:staging
      env:
        BUILD_TARGET: firebase
        NEXT_PUBLIC_ENV: staging
        NEXT_PUBLIC_STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
    
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
    
    - name: Deploy to Firebase Staging
      run: |
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}" > $HOME/gcloud-service-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud-service-key.json
        firebase use staging --token "${{ secrets.FIREBASE_TOKEN }}"
        firebase deploy --only hosting:staging --token "${{ secrets.FIREBASE_TOKEN }}"
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Staging deployment completed! Check it out at: https://reversi-sensei-staging.web.app'
          })